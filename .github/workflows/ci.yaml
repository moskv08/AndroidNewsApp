name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Android SDK Command-line Tools
        env:
          ANDROID_HOME: ${{ runner.temp }}/android-sdk
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip sdk-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm sdk-tools.zip

      - name: Accept Licenses
        env:
          ANDROID_HOME: ${{ runner.temp }}/android-sdk
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Verify SDK Manager
        env:
          ANDROID_HOME: ${{ runner.temp }}/android-sdk
        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list

      - name: Generate local.properties
        run: echo "sdk.dir=${{ runner.temp }}/android-sdk" > local.properties

      - name: Run lint
        run: ./gradlew lintDebug -Pandroid.lintOptions.htmlReport=true -Pandroid.lintOptions.htmlOutput=app/build/reports/lint-results-debug.html

      - name: Upload lint report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html
  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Android SDK
        env:
          ANDROID_HOME: ${{ runner.temp }}/android-sdk
          ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip sdk-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm sdk-tools.zip

      - name: Accept Licenses
        env:
          ANDROID_HOME: ${{ runner.temp }}/android-sdk
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install Required Android SDK Packages
        env:
          ANDROID_HOME: ${{ runner.temp }}/android-sdk
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Generate local.properties
        run: echo "sdk.dir=${{ runner.temp }}/android-sdk" > local.properties

      - name: Build the app
        run: ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk